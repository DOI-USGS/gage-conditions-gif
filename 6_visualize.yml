target_default: 6_visualize

include:
  - 2_process.yml

packages:
  - dplyr
  - tidyr
  - showtext

file_extensions:
  - feather
  - ind

sources:
  - 6_visualize/src/create_gif_tasks.R
  - 6_visualize/src/create_gif_makefile.R
  - 6_visualize/src/prep_watermark_fun.R
  - 6_visualize/src/prep_basemap_fun.R
  - 6_visualize/src/prep_gage_sites_fun.R
  - 6_visualize/src/prep_legend_fun.R
  - 6_visualize/src/visualize_utils.R
  - 6_visualize/src/combine_animation_frames.R

targets:

  6_visualize:
    depends:
      - 6_timestep_gif_tasks.yml
      - 6_visualize/log/6_timestep_gif_tasks.ind
      - 6_visualize/out/year_in_review.gif

  # here we'll generate the components for basemap, focus_geoms, secondary_geoms,
  # adn storm_line. each of these components doesn't change over time. each
  # component is a closure, i.e., a function that contains all the data it needs
  # to run. the closure should accept 0 arguments. the closure should be saved
  # into an RDS file with a corresponding .rds.ind indicator file.

  #### non-positional configuration information ####

  dates_config:
    command: viz_config[[I('dates')]]
  date_display_tz:
    command: viz_config[[I('date_display_tz')]]
  gage_color_config:
    command: viz_config[I(c('gage_norm_col','gage_line_col'))]
  intro_config:
    command: viz_config[[I(c('intro'))]]
  legend_text_cfg:
    command: viz_config[[I("legend_text")]]

  #### location of images on figure ####

  component_placement:
    command: viz_config[[I('component_placement')]]
  datetime_placement:
    command: component_placement[[I('datetime')]]
  watermark_x_pos:
    command: component_placement[[I('watermark_x_pos')]]
  watermark_y_pos:
    command: component_placement[[I('watermark_y_pos')]]
  legend_x_pos:
    command: component_placement[[I('legend_x_pos')]]
  legend_y_pos:
    command: component_placement[[I('legend_y_pos')]]
  outro_placement:
    command: component_placement[[I('outro')]]

  #### static image calls ####

  view_cfg:
    command: viz_config[I('ocean_col')]
  bbox_fun:
    command: prep_bbox_fun(view_config)
  basemap_fun:
    command: prep_basemap_fun('1_fetch/out/focus_geoms.rds.ind', '1_fetch/out/secondary_geoms.rds.ind')
  gage_sites_initial:
    command: prep_gage_sites_fun(stage_data, gage_color_config, storm_start_date)
  watermark_fun:
    command: prep_watermark_fun('6_visualize/in/usgs_logo_black.png', x_pos = watermark_x_pos, y_pos = watermark_y_pos)

  #### animation frames ####

  timestep_frame_config:
    command: viz_config[I(c('width','height'))]
  timestep_frame_step:
    command: viz_config[[I('frame_step')]]

  timestep_gif_tasks:
    command: create_timestep_gif_tasks(
      timestep_ind = '2_process/out/timesteps.rds.ind',
      folders = I(list(tmp=I('6_visualize/tmp'), log=I('6_visualize/log'))),
      frame_step = timestep_frame_step)
  # tmp=temporary folder for holding files to only be created on 1 computer.
  # log=folder for the few indicator files that don't correspond to a data file.

  6_timestep_gif_tasks.yml:
    command: create_timestep_gif_makefile(
      makefile = target_name,
      task_plan = timestep_gif_tasks,
      remake_file = I('6_visualize.yml'))

  # Build the timestep-specific functions and png files.
  # When we like how this is looking, we can set task_names=NULL to build all frames.
  # While iterating on the individual-png level, you may want to
  #   edit the list in trial_timestep_frames,
  #   task_names=trial_timestep_frames in the loop_tasks command, and
  #   rebuild with force=TRUE
  #
  # If you're trying to iterate on just a few png frames, delete 6_visualize/log/6_timestep_gif_tasks.ind,
  # then you can call scmake('6_visualize/log/6_timestep_gif_tasks.ind') repeatedly.
  # Once the .ind file exists, you'll need to call scmake('6_visualize/log/6_timestep_gif_tasks.ind', force=TRUE)
  # to iterate on all frames at once.
  trial_timestep_frames: I(c(''))
  6_visualize/log/6_timestep_gif_tasks.ind:
    command: loop_tasks(
      task_plan=timestep_gif_tasks, task_makefile='6_timestep_gif_tasks.yml',
      task_names=NULL,
      num_tries=I(1), sleep_on_error=I(0))

  # Combine the png files into a gif.
  #
  # When task_names != NULL, always call
  #   scmake('6_visualize/out/year_in_review.gif', force=TRUE)
  #
  # When we're close to done, we can add
  #   depends:
  #     - 6_visualize/log/6_timestep_gif_tasks.ind
  #   and set task_names=NULL to build all the frames.
  animation_cfg:
    command: viz_config[I('frame_delay_cs')]
  6_visualize/out/year_in_review.gif:
    command: combine_animation_frames(
      gif_file=target_name,
      animation_cfg=animation_cfg,
      task_names=NULL)
  6_visualize/out/year_in_review.gif.ind:
    command: gd_put(target_name, '6_visualize/out/year_in_review.gif')
